from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from core.notion.notion_client import get_all_clients  # –ù–æ–≤—ã–π –∏–º–ø–æ—Ä—Ç

router = Router()

ALEXANDR_ID = 6503850751  # Telegram ID –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞

@router.message(CommandStart())
async def show_admin_button(message: Message):
    if message.from_user.id == ALEXANDR_ID:
        await message.answer(
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üë®‚Äçüíº –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", callback_data="open_admin")]
            ])
        )
    else:
        await message.answer("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.")

@router.callback_query(F.data == "open_admin")
async def open_admin_panel(callback: CallbackQuery):
    if callback.from_user.id != ALEXANDR_ID:
        await callback.message.answer("‚õîÔ∏è –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
        return

    await callback.message.answer(
        "üìä –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üìã –í—Å–µ –∫–ª–∏–µ–Ω—Ç—ã", callback_data="view_clients")],
            [InlineKeyboardButton(text="üìà –ü—Ä–æ–≥—Ä–µ—Å—Å –ø—Ä–æ–µ–∫—Ç–æ–≤", callback_data="view_progress")],
            [InlineKeyboardButton(text="üßæ –õ–æ–≥–∏ –¥–µ–π—Å—Ç–≤–∏–π", callback_data="view_logs")]
        ])
    )

@router.callback_query(F.data == "view_clients")
async def show_clients(callback: CallbackQuery):
    clients = get_all_clients()
    client_names = [client['name'] for client in clients]
    await callback.message.answer("üìã –°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤:\n" + "\n".join(client_names))

@router.callback_query(F.data == "view_progress")
async def show_progress(callback: CallbackQuery):
    await callback.message.answer("üìà –ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –∫–ª–∏–µ–Ω—Ç–∞–º (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)...")

@router.callback_query(F.data == "view_logs")
async def show_logs(callback: CallbackQuery):
    await callback.message.answer("üßæ –õ–æ–≥–∏ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –∏–ª–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã)...")